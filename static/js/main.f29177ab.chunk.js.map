{"version":3,"sources":["comp/content.js","comp/navbar.js","comp/projects.js","comp/link.js","App.js","index.js"],"names":["ContentContainer","styled","div","Content","text","hoverLink","NavContainer","Logo","NavLink","Nav","LinkContainer","Link","setHoverLink","align","style","onMouseLeave","onMouseOver","extend","OrbitControls","Controls","orbitRef","useRef","useThree","camera","gl","useFrame","state","rotation","y","mouse","x","lerp","autoRotate","enableZoom","enabled","args","domElement","ref","Container","FillLight","brightness","color","width","height","intensity","position","lookAt","penumbra","castShadow","RimLight","Box2","mesh","current","z","attach","Box3","App","useState","setRotate","window","addEventListener","e","Math","round","pageYOffset","left","right","colorManagemet","fov","Stars","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f29177ab.chunk.js","sourcesContent":["import React, { useMemo, useRef, useState } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport styled from 'styled-components';\nimport {useSpring, a} from 'react-spring/three';\n\n\n\n\n\n\nconst ContentContainer = styled.div`\n\n\ndisplay: flex;\nalign-items:center;\n\nfont-size: 100px;\ncolor: white;\n\nposition: fixed;\ntop:calc(50%);\nleft:calc(100vw-50%);\nz-index:300;\n&:hover{\n    color: red;\n}\n\n`\n\nexport const Content = ({text, hoverLink}) => {\n\n\n    return (\n        <ContentContainer>{hoverLink}</ContentContainer>\n    )\n}","import React, { useMemo, useRef, useState } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport styled from 'styled-components';\nimport {useSpring, a} from 'react-spring/three';\n\n\n\n\n\n\nconst NavContainer = styled.div`\n\nwidth: 80vw;\nheight: 100px;\ndisplay: flex;\nalign-items:center;\njustify-content: space-between;\nfont-size: 100px;\ncolor: white;\nposition:fixed;\ntop: 0;\nz-index: 200;\n\n`\n\nconst Logo= styled.div`\n\n\n\n\nfont-size: 24px;\ncolor: white;\n\n\n`\n\nconst NavLink= styled.div`\n\ndisplay: flex;\n\n\n\n`\n\nconst Link= styled.div`\n\n\n\nfont-size: 16px;\nmargin: 0px 10px ;\ncursor: pointer;\n&:hover{\n    \n}\n\n\n`\n\nexport const Nav = () => {\n\n\n    return (\n        <NavContainer>\n            <Logo>Julian Mayes</Logo>\n            <NavLink>\n{/*                 <Link>about</Link>\n                <Link>contact</Link> */}\n\n            </NavLink>\n\n        </NavContainer>\n    )\n}","import React, { useMemo, useRef, useState } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport styled from 'styled-components';\nimport {useSpring, a} from 'react-spring/three';\n\nconst Container = styled.div`\nposition: absolute;\ntop: 0;\nleft: 0;\nwidth: 100vw; \nheight: 100vh;\ndisplay: flex;\nalign-items:center;\njustify-content: center;\n\n\n`\n\nconst ProjectGrid = styled.div`\n\n\nwidth: 60vw; \nheight: 200vh;\ndisplay: grid;\ngrid-template-columns: 2fr ;\ngrid-gap: 100px;\n\n\n`\n\n\nconst ProjectContainer = styled.div`\n\n\ndisplay: flex;\nalign-items:center;\njustify-content: center;\nfont-size: 40px;\ncolor: black;\nbackground: white;\ncursor:pointer;\ntransition: 1s ease;\n\n&:hover{\n    transform:scale(1.2);\n    transition: 1s ease;\n\n`\n\nexport const Projects = ({message}) => {\n\nconst [hover, setHover] = useState(false);\n\n\n    return (\n        <Container>\n        <ProjectGrid>\n            <ProjectContainer></ProjectContainer>\n            <ProjectContainer>hey</ProjectContainer>\n            <ProjectContainer>hey</ProjectContainer>\n            <ProjectContainer>hey</ProjectContainer>\n            <ProjectContainer>hey</ProjectContainer>\n            <ProjectContainer>hey</ProjectContainer>\n        </ProjectGrid>\n        </Container>\n    )\n}","import React, { useMemo, useRef, useState } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport styled from 'styled-components';\nimport {useSpring, a} from 'react-spring/three';\n\n\n\n\n\n\nconst LinkContainer = styled.div`\n\n\ndisplay: flex;\nalign-items:center;\njustify-content: center;\nfont-size: 12px;\ncolor: white;\nposition: fixed;\n\ntop: 50vh;\ncursor: pointer;\nz-index: 300;\n\n\n`\n\nexport const Link = ({text, hoverLink, setHoverLink, align}) => {\n\n\n    return (\n        <LinkContainer style={align} onMouseLeave={()=> setHoverLink('')} onMouseOver={()=> setHoverLink(text)}><p>{text}</p></LinkContainer>\n    )\n}","import React, { useMemo, useRef, useState, useCallback } from 'react';\n\nimport { Canvas, extend, useFrame, useThree } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport styled from 'styled-components';\n\nimport {useSpring, a} from 'react-spring/three';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\nimport { Roboto } from './fonts'\n\nimport { Html, Text, MeshWobbleMaterial, MeshReflectorMaterial, MeshDistortMaterial, Stars } from \"@react-three/drei\";\nimport { Content } from './comp/content'\nimport { Projects } from './comp/projects'\nimport { Nav } from './comp/navbar'\nimport lerp from 'lerp'\n\nimport { Link } from './comp/link'\n\nconst HTMLContent = ({\n  domContent,\n  children,\n  bgColor,\n  modelPath,\n  position,\n}) => {\n  const ref = useRef();\n\n  const [rotate, setRotate] =useState(0);\n\n  window.addEventListener('scroll', (e) => {\n\n    setRotate(Math.round(window.pageYOffset))\n    \n  \n  \n  });\n  \n  return (\n<>\n      <group position={[0, rotate / 100 , 0]}>\n\n        <Html fullscreen >\n          <div  className='container'>\n            <h1 className='title'>Hi, I'm Julian</h1>\n          </div>\n        </Html>\n       \n\n\n      </group>\n\n<group position={[0, -10 + rotate / 100, 0]}>\n\n<Html fullscreen >\n  <div  className='container'>\n    <h1 className='title'>I am a designer</h1>\n  </div>\n</Html>\n\n\n\n</group>\n</>\n  );\n};\n\n\n\n\nextend({ OrbitControls });\n\nconst Controls =() => {\n\n  const orbitRef = useRef();\n  const { camera, gl } = useThree();\n\n\n  useFrame((state) => (\n\n\n/*     orbitRef.current.update(), */\n\n    camera.rotation.y = -0.45 + state.mouse.x * -0.05,\n   \n\n    camera.rotation.x = lerp(camera.rotation.x, state.mouse.y * 0.5, 0.01)\n\n    // Rotate Z & Y axis\n\n  \n  \n\n   ));\n\n  return ( \n    <orbitControls\n      autoRotate\n      enableZoom={true}\n      enabled={false}\n      args={[camera, gl.domElement]}\n      ref={orbitRef}\n    />\n  )\n}\n\n\n/* const MySphere = () => {\n\n  const [top, setTop] = useState(false);\n  \n  \n  \n    window.addEventListener('scroll', () => {\n  \n    window.pageYOffset > 100 ? setTop(true) : setTop(false)\n      \n  \n    \n    });\n  \n  \n    return(\n      <mesh  >\n      <Html fullscreen >\n        <div style={{height: '100vh', textAlign:'center', color:'white', fontSize:'50px', display:'flex', alignItems:'center', justifyContent:'center' }}>\n        <Content/> \n        </div></Html>\n      </mesh>\n    )\n  } */\n  \n\nconst Container = styled.div`\n\nwidth: 100vw;\nheight:100vh;\nposition: absolute;\nbackground: rgb(151, 199, 255);\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\noverflow: scroll;\n`\n\n// Lights\nfunction KeyLight({ brightness, color }) {\n  return (\n    <rectAreaLight\n      width={3}\n      height={3}\n      color={color}\n      intensity={brightness}\n      position={[-2, 0, 5]}\n      lookAt={[0, 0, 0]}\n      penumbra={1}\n      castShadow\n    />\n  );\n}\nfunction FillLight({ brightness, color }) {\n  return (\n    <rectAreaLight\n      width={3}\n      height={3}\n      intensity={brightness}\n      color={color}\n      position={[2, 1, 4]}\n      lookAt={[0, 0, 0]}\n      penumbra={2}\n      castShadow\n    />\n  );\n}\n\nfunction RimLight({ brightness, color }) {\n  return (\n    <rectAreaLight\n      width={2}\n      height={2}\n      intensity={brightness}\n      color={color}\n      position={[1, 4, -2]}\n      rotation={[0, 180, 0]}\n      castShadow\n    />\n  );\n}\n\n\nconst Words = () => {\n\n  const[top, setTop] = useState(false);\n\n  const props = useSpring({\n\n    words: top ? 'hey' : 'yo',\n \n  })\n  \n\n  window.addEventListener('scroll', () => {\n\n    if(Math.round(window.pageYOffset) > 1000){setTop(true)} else if (Math.round(window.pageYOffset) < 1000){setTop(false)}\n  \n  });\n\n  \n\nreturn(\n  <Text color='white' fontSize='2' rotation={[0, 0, 0]}>\n\n  {top ? 'hello' : 'hey'}\n\n  </Text>\n)\n\n\n}\n\nconst Box = ({boxColor, boxSize, mouse, position, rotation, top}) => {\n\n\n\n  \n\n/*   const [boxRotate, setRotate] = useState(null)\n\n  window.addEventListener('scroll', () => {\n\n    setRotate(Math.round(window.pageYOffset))\n    \n    console.log(mesh)\n \n  })\n\n  const mesh = useRef(null);\nuseFrame(() => (\n \n   mesh.current.position.y = -10 + boxRotate / 150,\n   mesh.current.rotation.y = boxRotate / 500\n\n\n  \n  ));\n */\n\n\n\n\n\nconst [hovered, setHovered] = useState(false);\nconst [active, setActive] = useState(false);\n\n\n  \nconst props = useSpring({\n\n  config: { mass: 8, tension: 280, friction: 100 },\n\n  color: hovered ? '#ffd166' : '#FFB7D9' ,\n  scale: active ? [1, 1, 1] : [2, 2, 2],\n  position: position,\n  rotation: rotation\n})\n\n\n\n\n\n\n\nreturn (\n\n<a.mesh \nposition={props.position}\nrotation={props.rotation}\nonClick={() => setActive(!active)}\n  onPointerOver={() => setHovered(!hovered)}\n  onPointerOut={() => setHovered(!hovered)}\n  scale={props.scale}\n\n  >\n\n\n  <a.boxBufferGeometry attach=\"geometry\" args ={[1, 1, 1]} />\n  <MeshWobbleMaterial speed={1} factor={.6}\n    attach=\"material\"\n    color = '#FFB7D9'\n    \n  />\n  \n</a.mesh>\n\n);\n\n\n\n};\n\n\nconst Box2 = () => {\n\n\n\n  \n\n  /*   const [boxRotate, setRotate] = useState(null)\n  \n    window.addEventListener('scroll', () => {\n  \n      setRotate(Math.round(window.pageYOffset))\n      \n      console.log(mesh)\n   \n    })\n  \n    const mesh = useRef(null);\n  useFrame(() => (\n   \n     mesh.current.position.y = -10 + boxRotate / 150,\n     mesh.current.rotation.y = boxRotate / 500\n  \n  \n    \n    ));\n   */\n  \n  \n  \n  \n \n  \n  \n  const mesh = useRef();\n  useFrame((state) => (\n   \n\n\n\n\n     mesh.current.position.x = lerp(mesh.current.position.x, state.mouse.x * 5, 0.05),\n     mesh.current.position.z = lerp(mesh.current.position.z, -state.mouse.x * 9, 0.05),\n     mesh.current.position.y = lerp(mesh.current.position.y, state.mouse.y * 8, 0.05),\n\n     mesh.current.rotation.y =  lerp(mesh.current.position.y, -state.mouse.x * 6, 0.05),\n     mesh.current.rotation.x += 0.02\n\n  \n  \n    \n    ));\n\n  \n  \n  \n  \n  \n  \n  return (\n  \n  <mesh ref={mesh} position={[10,0,0]} rotation={[0,5,0]}>\n  \n  \n    <boxBufferGeometry attach=\"geometry\" args ={[1, 1, 1]} />\n    <meshStandardMaterial attach=\"material\" color = '#FFB7D9'/>\n\n    </mesh>\n    \n\n  \n  );\n  \n  \n  \n  };\n\n\n\nconst Box3= () => {\n\n\n\n  \n\n  /*   const [boxRotate, setRotate] = useState(null)\n  \n    window.addEventListener('scroll', () => {\n  \n      setRotate(Math.round(window.pageYOffset))\n      \n      console.log(mesh)\n   \n    })\n  \n    const mesh = useRef(null);\n  useFrame(() => (\n   \n     mesh.current.position.y = -10 + boxRotate / 150,\n     mesh.current.rotation.y = boxRotate / 500\n  \n  \n    \n    ));\n   */\n  \n  \n  \n  \n \n  \n  \n  const mesh = useRef();\n  useFrame((state) => (\n   \n\n  \n     mesh.current.position.x = lerp(mesh.current.position.x, -state.mouse.x * 4, 0.05),\n     mesh.current.position.z = lerp(mesh.current.position.z, state.mouse.x * 9, 0.05),\n     mesh.current.position.y = lerp(mesh.current.position.y, -state.mouse.y * 9, 0.05),\n\n     mesh.current.rotation.y =  lerp(mesh.current.position.y, state.mouse.x * 6, 0.05),\n     mesh.current.rotation.x += 0.02\n\n\n     \n\n\n  \n  \n    \n    ));\n\n  \n  \n  \n  \n  \n  \n  return (\n  \n  <mesh ref={mesh} position={[10,0,0]} rotation={[0,5,0]}>\n  \n  \n    <boxBufferGeometry attach=\"geometry\" args ={[1, 1, 1]} />\n    <meshStandardMaterial attach=\"material\" color = 'blue'/>\n\n    </mesh>\n    \n\n  \n  );\n  \n  \n  \n  };\n\nexport default function App() {\n\n\nconst [mouse, setMouse] = useState({})\n\n\n\nconst [hoverLink, setHoverLink] = useState('')\n\n\n\n\n  /*  \nconst onMouseMove = (e) => {\n    setMouse({x:e.clientX,y:e.clientY})\n  }\n  \n\n\nwindow.addEventListener('scroll', () => {\n\n\n  setPosition(window.pageYOffset)\n\n}) */\n\n\n\nconst [rotate, setRotate] =useState(0);\n\nwindow.addEventListener('scroll', (e) => {\n\n  setRotate(Math.round(window.pageYOffset))\n  \n\n\n});\n\n\n\n\n\nreturn(\n  <>\n\n  <Container>\n\n  <Nav></Nav>\n  <Content hoverLink={hoverLink}><p></p></Content>\n\n  <Link align={{left:'5vw'}} style={{left: '5vw'}} hoverLink={hoverLink} setHoverLink={setHoverLink} text='projects'></Link>\n  <Link align={{right:'5vw'}}style={{position: 'fixed', right: '5vw'}} hoverLink={hoverLink} setHoverLink={setHoverLink} text='contact'></Link>\n   \n  </Container>\n \n  \n\n\n  <Canvas colorManagemet style={{ width:'100vw', height:'100vh'/*  bottom: (-500 + boxPosition / 5.5) */ }} camera={{position: [-5, 0, 10 ], fov: 50}}>\n   \n    <ambientLight intensity={.3}/>\n    <FillLight brightness={5.6} color={\"#a2d2ff\"} />\n    <RimLight brightness={1004} color={\"#a2d2ff\"} />\n<Controls></Controls>\n<Box2></Box2>\n\n<Box3></Box3>\n{/*   <Box  position={[-1, -7 + rotate / 300, -rotate / 500]} rotation={[0, -rotate / 500, 0]}/>\n  <Box position={[-4, -15 + rotate / 100, rotate / 300]} rotation={[0, rotate / 700, 0]} />\n  <Box position={[4, -15 + rotate / 200, -rotate / 400]} rotation={[0, rotate / 400, 0]}/>\n\n  <Box position={[6, -15 + rotate / 100, -rotate / 500]} rotation={[0, rotate / 400, 0]}/>\n\n  <Box position={[9, -15 + rotate / 700, -rotate / 200]} rotation={[0, rotate / 400, 0]}/> */}\n\n\n<Stars></Stars>\n\n{/* <HTMLContent></HTMLContent> */}\n\n  </Canvas>\n\n  </>\n)\n\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css'; \n\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}